@model DND_App.Web.Models.ViewModels.CreateCharacterViewModel

@{
    var skills = ViewBag.Skills as List<DND_App.Web.Models.Domain.Skill>;
    var spells = ViewBag.Spells as List<DND_App.Web.Models.Domain.Spell>;
    var items = ViewBag.Items as List<DND_App.Web.Models.Domain.Item>;
    var treasures = ViewBag.Treasures as List<DND_App.Web.Models.Domain.Treasure>;
}

@{
}
<div class="bg-primary bg-opacity-10 py-3">
    <div class="container">
        <h1>Create your character</h1>
    </div>
</div>

<form asp-action="Create" method="post">
    <div class="container">
        <div class="accordion" id="characterAccordion">
            <!-- GeneralInformation Section -->
            <div class="accordion-item" data-validation-error="GeneralInformation">
                <h2 class="accordion-header" id="headingGeneral">
                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseGeneral" aria-expanded="false" aria-controls="collapseGeneral">
                        General Information
                    </button>
                </h2>
                <div id="collapseGeneral" class="accordion-collapse collapse" aria-labelledby="headingGeneral" data-bs-parent="#characterAccordion">
                    <div class="accordion-body">
                        <div class="form-group">
                            <label asp-for="CharacterName" class="form-label"></label>
                            <input asp-for="CharacterName" class="form-control"
                                   style="display:block; width:15%" />
                            <span asp-validation-for="CharacterName" class="text-danger"></span>
                        </div>
                        <div>
                            <label class="form-label"></label>
                            <input type="hidden" class="form-control" id="featuredImageUrl" asp-for="CharacterImage" />
                            <span asp-validation-for="CharacterImage"></span>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Upload Character Image</label>
                            <input type="file" id="featuredImageUpload" class="form-control" />
                            <img id="featuredImageDisplay" class="img-fluid rounded mt-3"
                                 style="display: none; width: 25%; height: auto;" alt="Uploaded Character Image" />
                        </div>
                        <div>
                            <label style="display:block" class="py-3">Class</label>
                            <select asp-for="CharacterClassId" style="display:block; width:15%">
                                @foreach (var c in ViewBag.Classes)
                                {
                                    <option value="@c.Id">@c.Name</option>
                                }
                            </select>
                        </div>
                        <div>
                            <label style="display: block" class="py-3">Race</label>
                            <select asp-for="CharacterRaceId" style="display:block; width:15%">
                                @foreach (var r in ViewBag.Races)
                                {
                                    <option value="@r.Id">@r.Name</option>
                                }
                            </select>
                        </div>
                        <div class="form-group">
                            <label asp-for="Level" class="form-label"></label>
                            <input asp-for="Level" class="form-control"
                                   style="display:block; width:15%"
                                   step="1" min="0" />
                            <span asp-validation-for="Level" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="ExperiencePoints" class="form-label"></label>
                            <input asp-for="ExperiencePoints" class="form-control"
                                   style="display:block; width:15%"
                                   step="1" min="0" />
                            <span asp-validation-for="ExperiencePoints" class="text-danger"></span>
                        </div>
                        <div>
                            <label style="display: block" class="py-3">Alignment</label>
                            <select class="form-control" id="alignment"
                                    style="display:block; width:15%"
                                    asp-for="Alignment">
                                @if (ViewBag.Alignments != null)
                                {
                                    @foreach (var alignment in ViewBag.Alignments)
                                    {
                                        <option value="@alignment">@alignment</option>
                                    }
                                }
                                else
                                {
                                    <option disabled>No alignments available</option>
                                }
                            </select>
                            <span asp-validation-for="Alignment"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="Age" class="form-label"></label>
                            <input asp-for="Age" class="form-control"
                                   style="display:block; width:15%"
                                   step="1" min="0" />
                            <span asp-validation-for="Age" class="text-danger"></span>
                        </div>
                        <div>
                            <label style="display: block" class="py-3">Gender</label>
                            <select class="form-control" id="gender"
                                    style="display:block; width:15%"
                                    asp-for="Gender">
                                @if (ViewBag.Gender != null)
                                {
                                    @foreach (var gender in ViewBag.Gender)
                                    {
                                        <option value="@gender">@gender</option>
                                    }
                                }
                                else
                                {
                                    <option disabled>No gender available</option>
                                }
                            </select>
                            <span asp-validation-for="Gender"></span>
                        </div>
                    </div>
                </div>
            </div>
            <!-- Attribute Section -->
            <div class="accordion-item" data-validation-error="Attributes">
                <h2 class="accordion-header" id="headingAttributes">
                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseAttributes" aria-expanded="false" aria-controls="collapseAttributes">
                        Attributes
                    </button>
                </h2>
                <div id="collapseAttributes" class="accordion-collapse collapse" aria-labelledby="headingAttributes" data-bs-parent="#characterAccordion">
                    <div class="accordion-body">
                        <div class="form-group">
                            <label asp-for="Strength" class="form-label"></label>
                            <input asp-for="Strength" class="form-control"
                                   style="display:block; width:15%"
                                   step="1" min="0" />
                            <span asp-validation-for="Strength" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="Dexterity" class="form-label"></label>
                            <input asp-for="Dexterity" class="form-control"
                                   style="display:block; width:15%"
                                   step="1" min="0" />
                            <span asp-validation-for="Dexterity" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="Constitution" class="form-label"></label>
                            <input asp-for="Constitution" class="form-control"
                                   style="display:block; width:15%"
                                   step="1" min="0" />
                            <span asp-validation-for="Constitution" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="Intelligence" class="form-label"></label>
                            <input asp-for="Intelligence" class="form-control"
                                   style="display:block; width:15%"
                                   step="1" min="0" />
                            <span asp-validation-for="Intelligence" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="Wisdom" class="form-label"></label>
                            <input asp-for="Wisdom" class="form-control"
                                   style="display:block; width:15%"
                                   step="1" min="0" />
                            <span asp-validation-for="Wisdom" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="Charisma" class="form-label"></label>
                            <input asp-for="Charisma" class="form-control"
                                   style="display:block; width:15%"
                                   step="1" min="0" />
                            <span asp-validation-for="Charisma" class="text-danger"></span>
                        </div>
                    </div>
                </div>
            </div>
            <!-- Backstory Section -->
            <div class="accordion-item" data-validation-error="Backstory">
                <h2 class="accordion-header" id="headingBackstory">
                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseBackstory" aria-expanded="false" aria-controls="collapseBackstory">
                        Backstory
                    </button>
                </h2>
                <div id="collapseBackstory" class="accordion-collapse collapse" aria-labelledby="headingBackstory" data-bs-parent="#characterAccordion">
                    <div class="accordion-body">
                        <div>
                            <label class="form-label">Character Backstory</label>
                            <textarea class="form-control" id="characterBackstory" asp-for="CharacterBackstory"></textarea>
                            <span asp-validation-for="CharacterBackstory"></span>
                        </div>
                    </div>
                </div>
            </div>
            <!-- Appearance Section -->
            <div class="accordion-item" data-validation-error="Appearance">
                <h2 class="accordion-header" id="headingAppearance">
                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseAppearance" aria-expanded="false" aria-controls="collapseAppearance">
                        Appearance
                    </button>
                </h2>
                <div id="collapseAppearance" class="accordion-collapse collapse" aria-labelledby="headingAppearance" data-bs-parent="#characterAccordion">
                    <div class="accordion-body">
                        <div>
                            <label class="form-label">Height</label>
                            <input type="text" class="form-control" id="height"
                                   style="display:block; width:15%"
                                   placeholder="Enter height (e.g., 6 2)" />
                            <span asp-validation-for="Height"></span>
                        </div>
                        <p id="formattedHeight" class="mt-2"></p>
                        <input type="hidden" id="formattedHeightInput"
                               asp-for="Height" />
                        <div>
                            <label class="form-label">Weight</label>
                            <input type="text" class="form-control" id="weight"
                                   style="display:block; width:15%"
                                   asp-for="Weight" placeholder="Enter weight (e.g., 150)" />
                            <span asp-validation-for="Weight"></span>
                        </div>
                        <div>
                            <label class="form-label">Eyes</label>
                            <input type="text" class="form-control" id="eyes"
                                   style="display:block; width:15%"
                                   asp-for="Eyes" />
                            <span asp-validation-for="Eyes"></span>
                        </div>
                        <div>
                            <label class="form-label">Skin</label>
                            <input type="text" class="form-control" id="skin"
                                   style="display:block; width:15%"
                                   asp-for="Skin" />
                            <span asp-validation-for="Skin"></span>
                        </div>
                        <div>
                            <label class="form-label">Hair</label>
                            <input type="text" class="form-control" id="hair"
                                   style="display:block; width:15%"
                                   asp-for="Hair" />
                            <span asp-validation-for="Hair"></span>
                        </div>
                    </div>
                </div>
            </div>
            <!-- Combat Section -->
            <div class="accordion-item" data-validation-error="Combat">
                <h2 class="accordion-header" id="headingCombat">
                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseCombat" aria-expanded="false" aria-controls="collapseCombat">
                        Combat
                    </button>
                </h2>
                <div id="collapseCombat" class="accordion-collapse collapse" aria-labelledby="headingCombat" data-bs-parent="#characterAccordion">
                    <div class="accordion-body">
                        <div class="form-group">
                            <label asp-for="ArmorClass" class="form-label"></label>
                            <input asp-for="ArmorClass" class="form-control"
                                   style="display:block; width:15%"
                                   step="1" min="0" />
                            <span asp-validation-for="ArmorClass" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="Speed" class="form-label"></label>
                            <input asp-for="Speed" class="form-control"
                                   style="display:block; width:15%"
                                   step="1" min="0" />
                            <span asp-validation-for="Speed" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="HitPoints_Total" class="form-label"></label>
                            <input asp-for="HitPoints_Total" class="form-control"
                                   style="display:block; width:15%"
                                   step="1" min="0" />
                            <span asp-validation-for="HitPoints_Total" class="text-danger"></span>
                        </div>
                        <div class="d-none">
                            <input asp-for="HitPoints_Current" />
                            <input asp-for="PassiveWisdom" />
                            <input asp-for="ProficiencyBonus" />
                            <input asp-for="EncumbranceStatus" />
                            <input asp-for="Initiative" />
                            <input asp-for="TotalWeight" />
                        </div>
                    </div>
                </div>
            </div>
            <!-- FeaturesAndTraits Section -->
            <div class="accordion-item" data-validation-error="FeaturesAndTraits">
                <h2 class="accordion-header" id="headingFeaturesAndTraits">
                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseFeaturesAndTraits" aria-expanded="false" aria-controls="collapseFeaturesAndTraits">
                        Features And Traits
                    </button>
                </h2>
                <div id="collapseFeaturesAndTraits" class="accordion-collapse collapse" aria-labelledby="headingFeaturesAndTraits" data-bs-parent="#characterAccordion">
                    <div class="accordion-body">
                        <div>
                            <label class="form-label">Personality Traits</label>
                            <input type="text" class="form-control" id="personalityTraits" asp-for="PersonalityTraits" />
                            <span asp-validation-for="PersonalityTraits"></span>
                        </div>
                        <div>
                            <label class="form-label">Ideals</label>
                            <input type="text" class="form-control" id="ideals" asp-for="Ideals" />
                            <span asp-validation-for="Ideals"></span>
                        </div>
                        <div>
                            <label class="form-label">Bonds</label>
                            <input type="text" class="form-control" id="bonds" asp-for="Bonds" />
                            <span asp-validation-for="Bonds"></span>
                        </div>
                        <div>
                            <label class="form-label">Flaws</label>
                            <input type="text" class="form-control" id="flaws" asp-for="Flaws" />
                            <span asp-validation-for="Flaws"></span>
                        </div>
                        <div>
                            <label class="form-label">Inspiration</label>
                            <input type="text" class="form-control" id="inspiration" asp-for="Inspiration" />
                            <span asp-validation-for="Inspiration"></span>
                        </div>
                    </div>
                </div>
            </div>
            <!-- Skills Section -->
            <div class="accordion-item" data-validation-error="Skills">
                <h2 class="accordion-header" id="headingSkills">
                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseSkills" aria-expanded="false" aria-controls="collapseSkills">
                        Skills
                    </button>
                </h2>
                <div id="collapseSkills" class="accordion-collapse collapse" aria-labelledby="headingSkills" data-bs-parent="#characterAccordion">
                    <div class="accordion-body">
                        <h4>Skills</h4>
                        @if (skills != null && skills.Count > 0)
                        {
                            for (var i = 0; i < skills.Count; i++)
                            {
                                var skill = skills.FirstOrDefault(s => s.Id == Model.CharacterSkills[i].SkillId);
                                @if (skill != null)
                                {
                                    <div class="mb-3">
                                        <label class="form-label">@skill.Name (@skill.AlignedAttribute)</label>
                                        <input type="hidden" name="CharacterSkills[@(i)].SkillId" value="@skill.Id" />
                                        <div class="form-check">
                                            <input class="form-check-input proficient-checkbox" type="checkbox"
                                                   id="CharacterSkills_@(i)__IsProficient"
                                                   name="CharacterSkills[@(i)].IsProficient"
                                                   value="true"
                                                   @(Model.CharacterSkills[i]?.IsProficient ?? false ? "checked" : "")
                                                   data-bonus-id="CharacterSkills_@(i)__Bonus" />
                                            <label class="form-check-label" for="CharacterSkills_@(i)__IsProficient">Proficient</label>
                                        </div>
                                    </div>
                                }

                            }
                        }
                    </div>
                </div>
            </div>
            <!-- Spells Section -->
            <div class="accordion-item" data-validation-error="Spells">
                <h2 class="accordion-header" id="headingSpells">
                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseSpells" aria-expanded="false" aria-controls="collapseSpells">
                        Spells
                    </button>
                </h2>
                <div id="collapseSpells" class="accordion-collapse collapse" aria-labelledby="headingSpells" data-bs-parent="#characterAccordion">
                    <div class="accordion-body">
                        <h4>Spells</h4>
                        @if (spells != null && spells.Count > 0)
                        {
                            @for (int i = 0; i < Model.CharacterSpells.Count; i++)
                            {
                                //var spell = spells[i];
                                //var characterSpell = Model.CharacterSpells.FirstOrDefault(cs => cs.SpellId == spell.Id) ?? new DND_App.Web.Models.ViewModels.CharacterSpellRequest();
                                var spell = spells.FirstOrDefault(s => s.Id == Model.CharacterSpells[i].SpellId);
                                <div>
                                    <label>
                                        <input type="checkbox" name="CharacterSpells[@i].IsLearned" value="true" @(Model.CharacterSpells[i].IsLearned ? "checked" : "") />
                                        <label class="form-label">@spell.Name </label>
                                    </label>
                                    <input type="hidden" name="CharacterSpells[@i].SpellId" value="@Model.CharacterSpells[i].SpellId" />
                                    <input type="hidden" name="CharacterSpells[@i].IsLearned" value="false" />
                                </div>
                            }
                        }


                    </div>
                </div>
            </div>
            <!-- Items Section -->
            <div class="accordion-item" data-validation-error="Items">
                <h2 class="accordion-header" id="headingItems">
                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseItems" aria-expanded="false" aria-controls="collapseItems">
                        Items
                    </button>
                </h2>
                <div id="collapseItems" class="accordion-collapse collapse" aria-labelledby="headingItems" data-bs-parent="#characterAccordion">
                    <div class="accordion-body">
                        <h4>Items</h4>

                        @if (items != null && items.Count > 0)
                        {
                            // Group items by Category
                            var groupedItems = Model.CharacterItems
                                .Select(ci => new { ci, item = items.FirstOrDefault(it => it.Id == ci.ItemId) })
                                .Where(x => x.item != null)
                                .GroupBy(x => x.item.Category)
                                .OrderBy(g => g.Key); // Sort categories alphabetically

                            int index = 0; // Initialize an index counter for proper array binding

                            @foreach (var categoryGroup in groupedItems)
                            {
                                <h5 class="mt-3 text-primary">@categoryGroup.Key</h5> <!-- Display Category Name -->

                                @for (int i = 0; i < categoryGroup.Count(); i++)
                                {
                                    var entry = categoryGroup.ElementAt(i);
                                    var item = entry.item;
                                    var characterItem = entry.ci;

                                    <div class="form-group">
                                        <label class="form-label">@item.Name</label>

                                        <!-- Corrected array-style indexing for proper model binding -->
                                        <input type="hidden" name="CharacterItems[@index].ItemId" value="@characterItem.ItemId" />
                                        <input type="number" id="CharacterItems_@(index)__Quantity" class="form-control"
                                               style="display:block; width:15%"
                                               name="CharacterItems[@index].Quantity"
                                               value="@characterItem.Quantity"
                                               min="0" />
                                    </div>

                                    index++; // Increment index for proper binding
                                }
                            }
                        }
                        else
                        {
                            <p>No items available.</p>
                        }

                    </div>
                </div>
            </div>
            <!-- Treasures Section -->
            <div class="accordion-item" data-validation-error="Treasures">
                <h2 class="accordion-header" id="headingTreasures">
                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseTreasures" aria-expanded="false" aria-controls="collapseTreasures">
                        Treasures
                    </button>
                </h2>
                <div id="collapseTreasures" class="accordion-collapse collapse" aria-labelledby="headingTreasures" data-bs-parent="#characterAccordion">
                    <div class="accordion-body">
                        <h4>Treasures</h4>
                        @for (int i = 0; i < Model.CharacterTreasures.Count; i++)
                        {
                            var treasure = treasures.FirstOrDefault(ct => ct.Id == Model.CharacterTreasures[i].TreasureId);
                            var characterTreasure = Model.CharacterTreasures[i];

                            if (treasure != null)
                            {
                                <div class="form-group">
                                    <label class="form-label">@treasure.Name</label>
                                    <input type="hidden" name="CharacterTreasures[@(i)].TreasureId" value="@characterTreasure.TreasureId" />
                                    <input type="number" class="form-control" id="CharacterTreasures_@(i)__Quantity"
                                           style="display:block; width:15%"
                                           name="CharacterTreasures[@(i)].Quantity"
                                           value="@characterTreasure.Quantity"
                                           min="0" />
                                </div>
                            }
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Button -->
    <div class="d-flex justify-content-between mt-3">
        <button type="submit" class="btn btn-primary">
            Create
        </button>
    </div>
</form>

@section Scripts{
    <script>
        var editor = new FroalaEditor('#characterBackstory', {
            imageUploadURL: '/api/images'
        });

        const featuredUploadElement = document.getElementById('featuredImageUpload');
        const featuredImageUrlElement = document.getElementById('featuredImageUrl');
        const featuredImageDisplayElement = document.getElementById('featuredImageDisplay');

        async function uploadFeaturedImage(e) {
            const file = e.target.files[0];

            if (!file) {
                console.error("No file selected.");
                return;
            }

            let data = new FormData();
            data.append('file', file);

            try {
                const response = await fetch('/api/images', {
                    method: 'POST',
                    body: data,
                });

                if (!response.ok) {
                    throw new Error(`Upload failed with status ${response.status}`);
                }

                const result = await response.json();

                if (featuredImageUrlElement) {
                    featuredImageUrlElement.value = result.link || result.secure_url;
                }

                if (featuredImageDisplayElement) {
                    featuredImageDisplayElement.src = result.link || result.secure_url;
                    featuredImageDisplayElement.style.display = 'block';
                }
            } catch (error) {
                console.error('Error during upload:', error);
            }
        }

        featuredUploadElement.addEventListener('change', uploadFeaturedImage);

    </script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Select all checkboxes with the 'proficient-checkbox' class
            document.querySelectorAll(".proficient-checkbox").forEach(function (checkbox) {
                checkbox.addEventListener("change", function () {
                    // Get the Bonus input field associated with this checkbox
                    const bonusInputId = this.getAttribute("data-bonus-id");
                    const bonusInput = document.getElementById(bonusInputId);

                    if (bonusInput) {
                        // Set Bonus to 0 if unchecked, otherwise allow user input
                        bonusInput.value = this.checked ? bonusInput.value : 0;
                        bonusInput.disabled = !this.checked; // Disable input when unchecked
                    }
                });
            });

            // Initialize Bonus fields on page load
            document.querySelectorAll(".proficient-checkbox").forEach(function (checkbox) {
                const bonusInputId = checkbox.getAttribute("data-bonus-id");
                const bonusInput = document.getElementById(bonusInputId);

                if (bonusInput) {
                    bonusInput.disabled = !checkbox.checked; // Disable input if checkbox is unchecked
                }
            });
        });
    </script>
    <script>
        document.getElementById('height').addEventListener('input', function (event) {
            const input = event.target.value.replace(/[^\d\s]/g, '').trim(); // Remove non-digit/non-space characters
            const heightPattern = /^(\d{1,2})\s*(\d{1,2})?$/;
            const formattedHeightElement = document.getElementById('formattedHeight');
            const hiddenHeightInput = document.getElementById('formattedHeightInput');

            if (heightPattern.test(input)) {
                const matches = input.match(heightPattern);
                const feet = matches[1];
                const inches = matches[2] || 0; // Default inches to 0 if not provided
                const formattedHeight = `${feet}ft ${inches}in`;
                formattedHeightElement.textContent = formattedHeight; // Display in <p>
                hiddenHeightInput.value = formattedHeight; // Update hidden input
            } else {
                formattedHeightElement.textContent = "Invalid format. Enter as '6 2' or '12 10'.";
                hiddenHeightInput.value = ""; // Clear hidden input if invalid
            }
        });

    </script>
    <script>
        document.getElementById('weight').addEventListener('input', function (event) {
            let input = event.target.value.replace(/\D/g, ''); // Remove non-numeric characters

            if (input.length === 0) {
                event.target.value = ''; // Prevents 'lbs.' from reappearing when empty
                return;
            }

            event.target.value = `${input} lbs.`;
        });

    </script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            let firstError = document.querySelector(".text-danger:not(:empty)");

            if (firstError) {
                let accordionItem = firstError.closest(".accordion-item");

                if (accordionItem) {
                    let collapseDiv = accordionItem.querySelector(".accordion-collapse");
                    let button = accordionItem.querySelector(".accordion-button");

                    if (collapseDiv && !collapseDiv.classList.contains("show")) {
                        collapseDiv.classList.add("show");
                        if (button) button.classList.remove("collapsed");
                    }
                }

                // Scroll to the first error smoothly
                firstError.scrollIntoView({ behavior: "smooth", block: "center" });
            }
        });

    </script>

}